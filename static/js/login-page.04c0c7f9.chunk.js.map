{"version":3,"sources":["components/Section/Section.styled.js","components/Section/Section.jsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2.js","components/LoginForm/LoginForm.styled.js","components/LoginForm/LoginForm.jsx","pages/LoginPage/LoginPage.jsx"],"names":["BoxSection","styled","div","Title","h1","Section","title","children","useState","showTitle","setShowTitle","CSSTransition","in","timeout","unmountOnExit","classNames","onEnter","onExited","defaultProps","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread2","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","Form","form","LabelInput","label","Text","span","FormlInput","input","ButtonWrapper","Button","button","LoginForm","initialState","email","localStorage","getItem","password","state","setState","useLoginUserMutation","loginUserHook","isLoading","hanldeChange","isSuccess","error","e","name","value","prev","resetForm","onSubmit","preventDefault","type","onChange","placeholder","disabled","autoComplete","required","LoginPage","console","log","Loader"],"mappings":"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","file":"static/js/login-page.04c0c7f9.chunk.js","sourcesContent":["import styled from '@emotion/styled';\n\nexport const BoxSection = styled.div`\n  /* padding: 15px;\ntext-align: center; */\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\nexport const Title = styled.h1`\n  /* margin-bottom: 15px; */\n  display: inline;\n  margin: 10px 0;\n  padding: 20px 0;\n\n  font-size: 2rem;\n\n  color: #2196f3;\n\n  opacity: 1;\n  transition: opacity 250ms linear;\n\n  cursor: default;\n\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  }\n\n  @media screen and (min-width: 480px) {\n    font-size: 2rem;\n  }\n`;\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { CSSTransition } from 'react-transition-group';\n// import { alert } from '../../index.css';\n\nimport { BoxSection, Title } from './Section.styled';\n\nconst Section = ({ title, children }) => {\n  const [showTitle, setShowTitle] = useState(true);\n  return (\n    <BoxSection>\n      <CSSTransition\n        in={showTitle}\n        timeout={300}\n        unmountOnExit\n        classNames=\"alert\"\n        onEnter={() => setShowTitle(true)}\n        onExited={() => setShowTitle(false)}\n      >\n        <Title>{title}</Title>\n      </CSSTransition>\n\n      {children}\n    </BoxSection>\n  );\n};\n\nSection.defaultProps = {\n  title: '',\n};\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nexport default function _objectSpread2(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        defineProperty(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}","import styled from '@emotion/styled';\r\n\r\n// Log in form\r\n\r\nexport const Form = styled.form`\r\n  width: 100%;\r\n  margin: 0 auto 15px;\r\n  padding: 15px;\r\n  border: 1px solid #d4d4d4;\r\n  border-radius: 4px;\r\n\r\n  @media screen and (min-width: 768px) {\r\n    width: 350px;\r\n  }\r\n`;\r\n\r\n// Labels on inputs\r\n\r\nexport const LabelInput = styled.label`\r\n  display: flex;\r\n  flex-direction: column;\r\n\r\n  margin-bottom: 15px;\r\n\r\n  color: #333232;\r\n`;\r\n// Span text\r\nexport const Text = styled.span`\r\n  margin-bottom: 5px;\r\n`;\r\n\r\n// Form inputs\r\nexport const FormlInput = styled.input`\r\n  padding: 11px;\r\n  border: 1px solid rgba(33, 33, 33, 0.2);\r\n  border-radius: 4px;\r\n\r\n  line-height: normal;\r\n\r\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  &:focus {\r\n    outline: transparent;\r\n    border: 1px solid #2196f3;\r\n  }\r\n`;\r\n\r\n// Log in button container\r\n\r\nexport const ButtonWrapper = styled.div`\r\n  text-align: center;\r\n`;\r\n\r\n// Log in button\r\n\r\nexport const Button = styled.button`\r\n  min-width: 150px;\r\n  height: 40px;\r\n  border: 0px solid transparent;\r\n  border-radius: 4px;\r\n\r\n  color: #fff;\r\n  background-color: #2196f3;\r\n\r\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\r\n\r\n  opacity: 1;\r\n\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 0.8;\r\n\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n\r\n  &:disabled {\r\n    background-color: #808080;\r\n    cursor: auto;\r\n  }\r\n`;\r\n\r\n//   .button {\r\n//     min-width: 150px;\r\n//     height: 40px;\r\n//     border: 0px solid transparent;\r\n//     border-radius: 4px;\r\n\r\n//     color: $clear-color;\r\n//     background-color: $main-color;\r\n\r\n//     box-shadow: $main-shadow;\r\n\r\n//     opacity: 1;\r\n\r\n//     transition: opacity $transition-duration $timing-function;\r\n\r\n//     cursor: pointer;\r\n\r\n//     &:hover,\r\n//     &:focus {\r\n//       opacity: 0.8;\r\n\r\n//       transition: opacity $transition-duration $timing-function;\r\n//     }\r\n\r\n//     &:disabled {\r\n//       background-color: $inactive-color;\r\n//       cursor: auto;\r\n//     }\r\n//   }\r\n","import { useState } from 'react';\r\nimport { useLoginUserMutation } from '../../redux/users/users-sliceApi';\r\nimport {\r\n  Form,\r\n  LabelInput,\r\n  Text,\r\n  FormlInput,\r\n  ButtonWrapper,\r\n  Button,\r\n} from './LoginForm.styled';\r\n\r\n// Компонент формы авторизации\r\nexport default function LoginForm() {\r\n  const initialState = {\r\n    email: localStorage.getItem('email') ?? '',\r\n    password: '',\r\n  };\r\n  const [state, setState] = useState(initialState);\r\n  const { email, password } = state;\r\n\r\n  //   const isLoading = useSelector(authSelectors.getLoading); // Селектор статуса загрузки\r\n  const [loginUserHook, { isLoading, isSuccess, error }] =\r\n    useLoginUserMutation();\r\n  // const dispatch = useDispatch();\r\n\r\n  // Диспатчит операцию входа + useCallback\r\n  //   const onLogin = useCallback(\r\n  //     state => {\r\n  //       dispatch(authOperations.logIn(state));\r\n  //     },\r\n  //     [dispatch],\r\n  //   );\r\n\r\n  const hanldeChange = e => {\r\n    const { name, value } = e.target;\r\n\r\n    setState(prev => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const hanldeSubmit = e => {\r\n    e.preventDefault();\r\n    const onSubmit = data => {\r\n      loginUserHook({ email, password });\r\n    };\r\n\r\n    onSubmit(state); // Вызов функции операции входа и передает данные из стейта\r\n\r\n    resetForm();\r\n  };\r\n\r\n  const resetForm = () => {\r\n    setState(initialState);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Form onSubmit={hanldeSubmit}>\r\n        <LabelInput>\r\n          <Text>Email</Text>\r\n\r\n          <FormlInput\r\n            type=\"email\"\r\n            name=\"email\"\r\n            value={email}\r\n            onChange={hanldeChange}\r\n            placeholder=\"Your e-mail\"\r\n            aria-label=\"Input for your email\"\r\n            disabled={isLoading}\r\n            autoComplete=\"email\"\r\n            required\r\n          />\r\n        </LabelInput>\r\n\r\n        <LabelInput>\r\n          <Text>Password</Text>\r\n\r\n          <FormlInput\r\n            type=\"password\"\r\n            name=\"password\"\r\n            value={password}\r\n            onChange={hanldeChange}\r\n            placeholder=\"Your password\"\r\n            aria-label=\"Input for your password\"\r\n            disabled={isLoading}\r\n            autoComplete=\"current-password\"\r\n            required\r\n          />\r\n        </LabelInput>\r\n\r\n        <ButtonWrapper>\r\n          <Button type=\"submit\" disabled={isLoading}>\r\n            Log in\r\n          </Button>\r\n        </ButtonWrapper>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n","import LoginForm from '../../components/LoginForm/LoginForm';\r\nimport Section from '../../components/Section/Section';\r\nimport Loader from '../../components/Loader/Loader';\r\nimport { useLoginUserMutation } from '../../redux/users/users-sliceApi';\r\n\r\n// Компонент страницы автозирации\r\nexport default function LoginPage() {\r\n  const [data, { isLoading }] = useLoginUserMutation(); // Селектор статуса загрузки\r\n\r\n  // console.log('data', data);\r\n  console.log('isLoading', isLoading);\r\n\r\n  return (\r\n    <Section title=\"Log in to Phonebook\">\r\n      <LoginForm />\r\n      {isLoading && <Loader />}\r\n    </Section>\r\n  );\r\n}\r\n"],"sourceRoot":""}