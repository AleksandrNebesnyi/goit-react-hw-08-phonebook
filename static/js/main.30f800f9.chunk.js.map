{"version":3,"sources":["redux/users/users-sliceApi.js","redux/contact/contacts-sliceApi.js","components/Loader/Loader.styled.js","components/Loader/Loader.jsx","redux/contact/contacts-actions.js","styles/globalStyle.js","redux/contact/filter-reducer.js","redux/auht/auth-slice.js","redux/store.js","components/Container/Container.styled.js","components/Container/Container.jsx","redux/auht/auth-selector.js","components/AppBar/AppBar.styled.js","components/Navigation/Navigation.styled.js","components/Navigation/Navigation.jsx","components/AuthNav/AuthNav.styled.js","components/AuthNav/AuhtNav.jsx","components/UserMenu/UserMenu.styled.js","components/UserMenu/UserMenu.jsx","components/AppBar/AppBar.jsx","components/PrivateRoute/PrivateRoute.jsx","components/PublicRoute/PublicRoute.jsx","App.js","index.js"],"names":["usersApi","createApi","reducerPath","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","token","getState","auth","set","tagTypes","endpoints","builder","registerUser","mutation","queryFn","contact","queryApi","extraOptions","a","url","method","body","then","response","error","status","data","catch","res","invalidatesTags","loginUser","logoutUser","arg","getUser","query","name","email","useRegisterUserMutation","useLoginUserMutation","useLogoutUserMutation","useGetUserQuery","contactApi","fetchContacts","providesTags","deleteContact","contactId","createContact","phone","useFetchContactsQuery","useDeleteContactMutation","useCreateContactMutation","LoaderStyled","styled","div","Loader","height","width","color","changeFilter","createAction","theme","Object","freeze","breakpoints","mobile","totablet","tablet","todesktop","desktop","colors","mainColor","secondaryColor","accentColor","clearColor","smallColor","inactiveColor","borderColor","backgroundColor","backgroundColorForm","borderDisabledColor","backgroundDisabledColor","boxShadow","transition","timing","timingFunction","filterReduser","createReducer","_","payload","authSlice","createSlice","initialState","user","extraReducers","addMatcher","matchFulfilled","state","isLogged","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","persistConfig","key","storage","storageSession","whitelist","persistedAuthReducer","persistReducer","reducer","store","configureStore","devTools","process","setupListeners","dispatch","persistor","persistStore","MainContainer","Container","children","getUserName","authUser","Header","header","List","ul","Item","li","NavLinkStyled","NavLink","Navigation","isAuthenticated","useSelector","to","AuthNav","Profile","Thumb","Avatar","img","WelcomeText","span","NameText","Button","button","UserMenu","logoutUserHook","src","alt","title","type","onClick","AppBar","console","log","PrivateRoute","element","redirectTo","toast","PublicRoute","restricted","HomePage","lazy","ContactsPage","LoginPage","RegisterPage","App","useQuery","isError","fallback","path","position","autoClose","hideProgressBar","newestOnTop","closeOnClick","rtl","pauseOnFocusLoss","draggable","pauseOnHover","ReactDOM","render","StrictMode","loader","document","getElementById"],"mappings":"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","file":"static/js/main.30f800f9.chunk.js","sourcesContent":["import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\r\n\r\nexport const usersApi = createApi({\r\n  reducerPath: 'users',\r\n  baseQuery: fetchBaseQuery({\r\n    baseUrl: 'https://connections-api.herokuapp.com/users',\r\n    prepareHeaders: (headers, { getState }) => {\r\n      const token = getState().auth.token;\r\n      if (token) {\r\n        headers.set('authorization', `Bearer ${token}`);\r\n      }\r\n      return headers;\r\n    },\r\n  }),\r\n  tagTypes: ['user'],\r\n  endpoints: builder => ({\r\n    registerUser: builder.mutation({\r\n      queryFn: async (contact, queryApi, extraOptions, baseQuery) => {\r\n        const res = await baseQuery({\r\n          url: '/signup',\r\n          method: 'POST',\r\n          body: contact,\r\n        })\r\n          .then(response => {\r\n            if (response.error) {\r\n              switch (response.error.status) {\r\n                case 400:\r\n                  return {\r\n                    error: { status: 400, data: 'Wrong email or passwird' },\r\n                  };\r\n                case 404:\r\n                  return {\r\n                    error: { status: 404, data: 'Not found' },\r\n                  };\r\n                case 500:\r\n                  return { error: { status: 500, data: 'Servers error' } };\r\n                default:\r\n                  return response.error;\r\n              }\r\n            }\r\n            return response;\r\n          })\r\n          .catch(error => error);\r\n        return res;\r\n      },\r\n      invalidatesTags: ['user'],\r\n    }),\r\n    loginUser: builder.mutation({\r\n      queryFn: async (contact, queryApi, extraOptions, baseQuery) => {\r\n        const res = await baseQuery({\r\n          url: `/login`,\r\n          method: 'POST',\r\n          body: contact,\r\n        })\r\n          .then(response => {\r\n            if (response.error) {\r\n              switch (response.error.status) {\r\n                case 400:\r\n                  return {\r\n                    error: { status: 400, data: 'Wrong email or passwird' },\r\n                  };\r\n                case 404:\r\n                  return {\r\n                    error: { status: 404, data: 'Not found' },\r\n                  };\r\n                default:\r\n                  return response.error;\r\n              }\r\n            }\r\n            return response;\r\n          })\r\n          .catch(error => error);\r\n        return res;\r\n      },\r\n      invalidatesTags: ['user'],\r\n    }),\r\n    logoutUser: builder.mutation({\r\n      queryFn: async (arg, queryApi, extraOptions, baseQuery) => {\r\n        const res = await baseQuery({\r\n          url: '/logout',\r\n          method: 'POST',\r\n        })\r\n          .then(response => {\r\n            if (response.error) {\r\n              switch (response.error.status) {\r\n                case 401:\r\n                  return {\r\n                    error: { status: 401, data: 'No authorization' },\r\n                  };\r\n                case 404:\r\n                  return {\r\n                    error: { status: 404, data: 'Not found' },\r\n                  };\r\n                case 500:\r\n                  return {\r\n                    error: { status: 500, data: 'Servers error' },\r\n                  };\r\n                default:\r\n                  return response.error;\r\n              }\r\n            }\r\n            return response;\r\n          })\r\n          .catch(error => error);\r\n        return res;\r\n      },\r\n    }),\r\n    getUser: builder.query({\r\n      queryFn: async (arg, queryApi, extraOptions, baseQuery) => {\r\n        if (!queryApi.getState().auth.token) {\r\n          return { data: { name: null, email: null } };\r\n        }\r\n        const res = await baseQuery({\r\n          url: '/current',\r\n        })\r\n          .then(response => {\r\n            if (response.error) {\r\n              switch (response.error.status) {\r\n                case 401:\r\n                  return {\r\n                    error: { status: 401, data: 'No authorization' },\r\n                  };\r\n                case 404:\r\n                  return {\r\n                    error: { status: 404, data: 'Not found' },\r\n                  };\r\n                default:\r\n                  return response.error;\r\n              }\r\n            }\r\n            return response;\r\n          })\r\n          .catch(error => error);\r\n        return res;\r\n      },\r\n    }),\r\n  }),\r\n});\r\n\r\nexport const {\r\n  useRegisterUserMutation,\r\n  useLoginUserMutation,\r\n  useLogoutUserMutation,\r\n  useGetUserQuery,\r\n} = usersApi;\r\n","import { createApi, fetchBaseQuery } from '@reduxjs/toolkit/query/react';\n\nexport const contactApi = createApi({\n  reducerPath: 'contactApi',\n  baseQuery: fetchBaseQuery({\n    baseUrl: 'https://61fb809f87801d0017a2c527.mockapi.io',\n  }),\n  tagTypes: ['Contact'],\n  endpoints: builder => ({\n    fetchContacts: builder.query({\n      query: () => '/contacts',\n      providesTags: ['Contact'],\n    }),\n    deleteContact: builder.mutation({\n      query: contactId => ({\n        url: `/contacts/${contactId}`,\n        method: 'DELETE',\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n    createContact: builder.mutation({\n      query: (name, phone) => ({\n        url: '/contacts',\n        method: 'POST',\n        body: {\n          name,\n          phone,\n        },\n      }),\n      invalidatesTags: ['Contact'],\n    }),\n  }),\n});\n\nexport const {\n  useFetchContactsQuery,\n  useDeleteContactMutation,\n  useCreateContactMutation,\n} = contactApi;\n","import styled from '@emotion/styled';\n\nexport const LoaderStyled = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  height: 100%;\n\n  /* display: grid;\n  place-content: center; */\n`;\n","import { TailSpin } from 'react-loader-spinner';\nimport { LoaderStyled } from './Loader.styled';\n\nconst Loader = ({ height = 100, width = 100 }) => {\n  return (\n    <LoaderStyled>\n      <TailSpin color=\"#02be6e\" height={height} width={width} />\n    </LoaderStyled>\n  );\n};\n\nexport default Loader;\n\n\n","import { createAction } from '@reduxjs/toolkit'; // Импорт функции создания экшена\n\n// Создание экшена для фильтра\n\nexport const changeFilter = createAction('contacts/change-filter');\n","export const theme = Object.freeze({\r\n  breakpoints: {\r\n    mobile: '480px',\r\n    totablet: '767px',\r\n    tablet: '768px',\r\n    todesktop: '1199px',\r\n    desktop: '1200px',\r\n  },\r\n\r\n  colors: {\r\n    mainColor: '#2196f3',\r\n    secondaryColor: '#333232',\r\n    accentColor: '#F7CC07',\r\n    clearColor: '#fff',\r\n\r\n    smallColor: '#4c527d',\r\n    inactiveColor: '#808080',\r\n    borderColor: '#d4d4d4',\r\n    backgroundColor: '#f0f1f3',\r\n    backgroundColorForm: '#E3DEE9',\r\n    borderDisabledColor: '#999999',\r\n    backgroundDisabledColor: '#cccccc',\r\n\r\n    boxShadow: `0px 4px 4px rgb(0 0 0 / 15%)`,\r\n  },\r\n  transition: {\r\n    timing: '250ms',\r\n    timingFunction: `cubic-bezier(0.4, 0, 0.2, 1)`,\r\n  },\r\n\r\n  //   spacing: value => `${4 * value}px`,\r\n});\r\n","import { createReducer } from '@reduxjs/toolkit'; // Импорт функции создания редюсера\nimport { changeFilter } from './contacts-actions';\n\n// Создание редюсера для фильтра в контактах\nconst filterReduser = createReducer('', {\n  [changeFilter]: (_, { payload }) => payload,\n});\n\n// Экспорт  редюсера\nexport default filterReduser;\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { usersApi } from '../users/users-sliceApi';\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState: { token: null, user: null },\r\n  extraReducers: builder => {\r\n    builder.addMatcher(\r\n      usersApi.endpoints.registerUser.matchFulfilled,\r\n      (state, { payload }) => {\r\n        state.token = payload.token;\r\n        state.user = payload.user;\r\n        state.isLogged = true;\r\n      },\r\n    );\r\n    builder.addMatcher(\r\n      usersApi.endpoints.loginUser.matchFulfilled,\r\n      (state, { payload }) => {\r\n        state.token = payload.token;\r\n        state.user = payload.user;\r\n        state.isLogged = true;\r\n      },\r\n    );\r\n    builder.addMatcher(usersApi.endpoints.logoutUser.matchFulfilled, state => {\r\n      state.token = null;\r\n      state.user = null;\r\n      state.isLogged = false;\r\n    });\r\n    builder.addMatcher(\r\n      usersApi.endpoints.getUser.matchFulfilled,\r\n      (state, { payload }) => {\r\n        state.user = payload;\r\n        state.isLogged = true;\r\n      },\r\n    );\r\n  },\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit'; // Импорт функции создания хранилища и прослойки\n\nimport { setupListeners } from '@reduxjs/toolkit/query';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist'; // Импорт функции персистеров и фикса консоли\nimport storageSession from 'redux-persist/lib/storage/session';\nimport filterReduser from './contact/filter-reducer';\nimport { contactApi } from './contact/contacts-sliceApi';\nimport { usersApi } from './users/users-sliceApi';\nimport { authSlice } from './auht/auth-slice';\n\n// Создание прослоек. Важен порядок!\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n\n  contactApi.middleware,\n  usersApi.middleware,\n];\n\nconst persistConfig = {\n  key: 'auth',\n  storage: storageSession,\n  whitelist: ['token'],\n};\nconst persistedAuthReducer = persistReducer(persistConfig, authSlice.reducer);\n\n// Создание хранилища (корневой редюсер + прослойки + тулзы только для разработки)\nexport const store = configureStore({\n  reducer: {\n    [usersApi.reducerPath]: usersApi.reducer,\n    [contactApi.reducerPath]: contactApi.reducer,\n    [authSlice.name]: persistedAuthReducer,\n    filter: filterReduser,\n  },\n\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nsetupListeners(store.dispatch);\n\n// Обёртка хранилища в персистор\nexport const persistor = persistStore(store);\n","import styled from \"@emotion/styled\";\n\n\nexport const MainContainer = styled.div`\nmax-width: 1440px;\nmargin-left: auto;\nmargin-right: auto;\npadding-left: 15px;\npadding-right: 15px;\n`; ","\nimport {MainContainer} from './Container.styled'\nimport PropTypes from 'prop-types';\n\n\nconst Container = ({ children }) => <MainContainer>{children}</MainContainer>;\n\nContainer.propTypes = {\n    children: PropTypes.node,\n  };\nexport default Container;","export const getUserName = state => state?.auth?.user?.name ?? null;\r\n\r\nexport const authUser = state => (state?.auth?.token ? true : false);\r\n\r\nexport const getToken = state => state?.auth?.token;\r\n","import styled from '@emotion/styled';\r\n\r\nexport const Header = styled.header`\r\n  display: flex;\r\n  justify-content: space-between;\r\n  align-items: center;\r\n  flex-direction: column;\r\n\r\n  padding: 20px;\r\n  border-bottom: 1px solid #d4d4d4;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    flex-direction: row;\r\n\r\n    padding: 0;\r\n  }\r\n`;\r\n","import styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n// Navigation list\r\nexport const List = styled.ul`\r\n  display: flex;\r\n\r\n  margin-bottom: 15px;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  &:not(:last-child) {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\n// Link for navigation item\r\n\r\nexport const NavLinkStyled = styled(NavLink)`\r\n  display: inline-block;\r\n  text-decoration: none;\r\n  padding: 12px;\r\n  font-weight: 500;\r\n  color: #6d7e83;\r\n  font-size: 30px;\r\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover,\r\n  &:focus {\r\n    color: #2196f3;\r\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n  &.active {\r\n    color: #2196f3;\r\n  }\r\n\r\n  @media screen and (min-width: 767px) {\r\n    padding: 20px 0;\r\n  }\r\n`;\r\n","import { useSelector } from 'react-redux';\r\nimport { authUser } from '../../redux/auht/auth-selector';\r\n// import { NavLink } from 'react-router-dom';\r\nimport { List, Item, NavLinkStyled } from './Navigation.styled';\r\n\r\n// Компонент главной навигации (меню) приложения\r\nexport default function Navigation() {\r\n  const isAuthenticated = useSelector(authUser); // Селектор статуса авторизации юзера\r\n\r\n  return (\r\n    <nav>\r\n      <List>\r\n        <Item>\r\n          <NavLinkStyled to={'/'}>Home</NavLinkStyled>\r\n        </Item>\r\n\r\n        {isAuthenticated && (\r\n          <Item>\r\n            <NavLinkStyled to={'/contacts'}>Contacts</NavLinkStyled>\r\n          </Item>\r\n        )}\r\n      </List>\r\n    </nav>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\nimport { NavLink } from 'react-router-dom';\r\n// Navigation list\r\nexport const List = styled.ul`\r\n  display: flex;\r\n`;\r\n\r\nexport const Item = styled.li`\r\n  &:not(:last-child) {\r\n    margin-right: 20px;\r\n  }\r\n`;\r\n\r\n// Link for navigation item\r\n\r\nexport const NavLinkStyled = styled(NavLink)`\r\n  display: inline-block;\r\n  text-decoration: none;\r\n  padding: 12px;\r\n  font-weight: 500;\r\n  color: #6d7e83;\r\n  font-size: 30px;\r\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  &:hover,\r\n  &:focus {\r\n    color: #2196f3;\r\n    transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n  &.active {\r\n    color: #2196f3;\r\n  }\r\n\r\n  @media screen and (min-width: 767px) {\r\n    padding: 20px 0;\r\n  }\r\n`;\r\n","import { List, Item, NavLinkStyled } from './AuthNav.styled';\r\n\r\n// Компонент меню регистрации и авторизации\r\nexport default function AuthNav() {\r\n  return (\r\n    <List>\r\n      <Item>\r\n        <NavLinkStyled to={'/register'}>Sign up</NavLinkStyled>\r\n      </Item>\r\n\r\n      <Item>\r\n        <NavLinkStyled to={'/login'}>Log in</NavLinkStyled>\r\n      </Item>\r\n    </List>\r\n  );\r\n}\r\n","import styled from '@emotion/styled';\r\n\r\n// User menu navigation container\r\nexport const Profile = styled.div`\r\n  display: flex;\r\n  align-items: center;\r\n\r\n  margin-bottom: 10px;\r\n\r\n  @media screen and (min-width: 767px) {\r\n    margin-bottom: 0;\r\n  }\r\n`;\r\nexport const Thumb = styled.div`\r\n  width: 32px;\r\n  margin-right: 10px;\r\n`;\r\nexport const Avatar = styled.img`\r\n  width: 100%;\r\n\r\n  border-radius: 50%;\r\n\r\n  opacity: 1;\r\n\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 0.8;\r\n\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n`;\r\n// User greetings text\r\nexport const WelcomeText = styled.span`\r\n  margin-right: 10px;\r\n`;\r\nexport const NameText = styled.span`\r\n  font-weight: 500;\r\n`;\r\nexport const Button = styled.button`\r\n  padding: 5px;\r\n  border: 0px solid transparent;\r\n  border-radius: 4px;\r\n\r\n  color: #fff;\r\n  background-color: #808080;\r\n\r\n  box-shadow: 0px 4px 4px rgb(0 0 0 / 15%);\r\n\r\n  opacity: 0.8;\r\n\r\n  transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n\r\n  cursor: pointer;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    opacity: 1;\r\n\r\n    transition: opacity 250ms cubic-bezier(0.4, 0, 0.2, 1);\r\n  }\r\n`;\r\n","import { useSelector } from 'react-redux';\r\nimport { getUserName } from '../../redux/auht/auth-selector';\r\nimport { useLogoutUserMutation } from '../../redux/users/users-sliceApi';\r\nimport {\r\n  Profile,\r\n  Thumb,\r\n  Avatar,\r\n  WelcomeText,\r\n  NameText,\r\n  Button,\r\n} from './UserMenu.styled';\r\n\r\n// Компонент меню пользователя после авторизации\r\nexport default function UserMenu() {\r\n  const name = useSelector(getUserName); // Селектор имя юзера\r\n\r\n  const [logoutUserHook] = useLogoutUserMutation();\r\n\r\n  return (\r\n    <Profile>\r\n      <Thumb>\r\n        <Avatar\r\n          src={`https://eu.ui-avatars.com/api/?background=2196f3&color=fff&&length=1&name=${name}`}\r\n          alt=\"avatar\"\r\n          title=\"Your avatar\"\r\n        />\r\n      </Thumb>\r\n\r\n      <WelcomeText>\r\n        Welcome, <NameText>{name}</NameText>\r\n      </WelcomeText>\r\n\r\n      <Button\r\n        type=\"button\"\r\n        title=\"Log out\"\r\n        aria-label=\"Log out\"\r\n        onClick={() => {\r\n          logoutUserHook();\r\n        }}\r\n      >\r\n        Logout\r\n      </Button>\r\n    </Profile>\r\n  );\r\n}\r\n","import { useSelector } from 'react-redux';\r\nimport { authUser } from '../../redux/auht/auth-selector';\r\nimport { Header } from './AppBar.styled.js';\r\nimport Navigation from 'components/Navigation/Navigation';\r\nimport AuthNav from 'components/AuthNav/AuhtNav';\r\nimport UserMenu from 'components/UserMenu/UserMenu';\r\n\r\n// Компонент хедера приложения (бара)\r\nexport default function AppBar() {\r\n  const isAuthenticated = useSelector(authUser); // Селектор статуса авторизации юзера\r\n  console.log('isAuthenticated-AppBar', isAuthenticated);\r\n\r\n  return (\r\n    <Header>\r\n      <Navigation />\r\n      {isAuthenticated ? <UserMenu /> : <AuthNav />}\r\n    </Header>\r\n  );\r\n}\r\n","import { Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authUser } from '../../redux/auht/auth-selector';\r\nimport { toast } from 'react-toastify';\r\n\r\n// * 1. Он должен повторять API Route\r\n// *  2. Он должен рендерить Route\r\n// * - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n// * - В противном случае рендерит Redirect на redirectT\r\n// - Если маршрут приватный и пользователь залогинен, рендерит компонент\r\n// - В противном случае рендерит Redirect на указанный роут\r\n// Компонент публичного роута\r\n// export default function PrivateRoute({\r\n//   children,\r\n//   redirectTo = '/',\r\n//   ...routeProps\r\n// }) {\r\n//   const isLoggedIn = useSelector(authUser); // Селектор статуса авторизации\r\n\r\n//   return (\r\n//     <Route {...routeProps}>\r\n//       {isLoggedIn ? children : <Navigate to={redirectTo} />}\r\n//     </Route>\r\n//   );\r\n// }\r\nexport default function PrivateRoute({ element, redirectTo }) {\r\n  const auth = useSelector(authUser);\r\n  console.log('auth ', auth);\r\n  if (!redirectTo) {\r\n    toast.error('No path for redirect');\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n  return <>{auth ? element : <Navigate to={redirectTo} />}</>;\r\n}\r\n","import {  Navigate } from 'react-router-dom';\r\nimport { useSelector } from 'react-redux';\r\nimport { authUser } from '../../redux/auht/auth-selector';\r\nimport { toast } from 'react-toastify';\r\n\r\n// - Если маршрут ограниченный, и пользователь залогинен, рендерит редирект на указанный роут\r\n// - В противном случае рендерит компонент\r\n// Компонент публичного роута\r\n\r\n\r\nexport default function PublicRoute({\r\n  redirectTo,\r\n  restricted = false,\r\n  element,\r\n}) {\r\n  const auth = useSelector(authUser);\r\n  if (!redirectTo && restricted) {\r\n    toast.error('No path for redirect');\r\n    return <Navigate to=\"/\" />;\r\n  }\r\n\r\n  return <>{auth && restricted ? <Navigate to={redirectTo} /> : element}</>;\r\n}\r\n// export default function PublicRoute({\r\n//   children,\r\n//   restricted = false,\r\n//   redirectTo = '/',\r\n//   ...routeProps\r\n// }) {\r\n//   const isLoggedIn = useSelector(authSelectors.getIsLoggedIn);\r\n//   const shouldRedirect = isLoggedIn && restricted;\r\n//   return (\r\n//     <Route {...routeProps}>\r\n//       {shouldRedirect ? <Redirect to={redirectTo} /> : children}\r\n//     </Route>\r\n//   );\r\n// }\r\n","import { lazy, Suspense } from 'react';\r\nimport { Routes, Route } from 'react-router-dom';\r\nimport Container from 'components/Container/Container.jsx';\r\nimport AppBar from './components/AppBar/AppBar.jsx';\r\nimport Loader from './components/Loader/Loader.jsx';\r\nimport PrivateRoute from './components/PrivateRoute/PrivateRoute.jsx';\r\nimport PublicRoute from './components/PublicRoute/PublicRoute.jsx';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport { useGetUserQuery } from './redux/users/users-sliceApi';\r\nimport { usersApi } from './redux/users/users-sliceApi';\r\n\r\nconst HomePage = lazy(() =>\r\n  import('./pages/HomePage/HomePage.jsx' /* webpackChunkName: \"home-page\" */),\r\n);\r\n\r\nconst ContactsPage = lazy(() =>\r\n  import(\r\n    './pages/ContactPage/ContactsPage.jsx' /* webpackChunkName: \"contacts-page\" */\r\n  ),\r\n);\r\nconst LoginPage = lazy(() =>\r\n  import(\r\n    './pages/LoginPage/LoginPage.jsx' /* webpackChunkName: \"login-page\" */\r\n  ),\r\n);\r\nconst RegisterPage = lazy(() =>\r\n  import(\r\n    './pages/RegisterPage/RegisterPage.jsx' /* webpackChunkName: \"register-page\" */\r\n  ),\r\n);\r\n\r\nconst App = () => {\r\n  const { data } = usersApi.endpoints.getUser.useQuery();\r\n  const { isError } = useGetUserQuery();\r\n  console.log(data);\r\n  console.log('errrrr', isError);\r\n\r\n  return (\r\n    <Container>\r\n      <AppBar />\r\n      <Suspense fallback={<Loader />}>\r\n        <Routes>\r\n          <Route path=\"/\" element={<HomePage />} />\r\n          <Route\r\n            path=\"register\"\r\n            element={\r\n              <PublicRoute\r\n                element={<RegisterPage />}\r\n                redirectTo=\"/contacts\"\r\n                restricted\r\n              />\r\n            }\r\n          />\r\n          <Route\r\n            path=\"login\"\r\n            element={\r\n              <PublicRoute\r\n                element={<LoginPage />}\r\n                redirectTo=\"/contacts\"\r\n                restricted\r\n              />\r\n            }\r\n          />\r\n\r\n          <Route\r\n            path=\"contacts/*\"\r\n            element={\r\n              <PrivateRoute element={<ContactsPage />} redirectTo=\"/login\" />\r\n            }\r\n          />\r\n        </Routes>\r\n      </Suspense>\r\n\r\n      <ToastContainer\r\n        position=\"top-right\"\r\n        autoClose={3000}\r\n        hideProgressBar={false}\r\n        newestOnTop={false}\r\n        closeOnClick\r\n        rtl={false}\r\n        pauseOnFocusLoss\r\n        draggable\r\n        pauseOnHover\r\n      />\r\n    </Container>\r\n  );\r\n};\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { PersistGate } from 'redux-persist/integration/react';\r\nimport { ThemeProvider } from '@emotion/react';\r\nimport { theme } from './styles/globalStyle';\r\nimport 'modern-normalize/modern-normalize.css';\r\nimport './index.css';\r\nimport { store, persistor } from './redux/store';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <ThemeProvider theme={theme}>\r\n      <Provider store={store}>\r\n        <PersistGate loader={null} persistor={persistor}>\r\n          <BrowserRouter>\r\n            <App />\r\n          </BrowserRouter>\r\n        </PersistGate>\r\n      </Provider>\r\n    </ThemeProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}